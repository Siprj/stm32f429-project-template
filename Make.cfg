# Binaries will be generated with this name (.elf, .bin, .hex, etc)
PROJ_NAME=project-example

# Put your STM32F4 library code directory here
STM_COMMON=/home/yrid/Programing/stm32_discovery_arm_gcc/STM32F4-Discovery_FW_V1.1.0/

# Set gcc prefix or full pat and prefix
GCC_PREFIX=arm-none-eabi-





# You don't need to change this.
COMMON_FLAGS = -g -O2 -Wall -std=c99 
#COMMON_FLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
COMMON_FLAGS += -mfloat-abi=soft
COMMON_FLAGS += -mlittle-endian -mthumb -mcpu=cortex-m4 -mthumb-interwork

CFLAGS  = $(COMMON_FLAGS)
CFLAGS += -DSTM32F429_439xx

# Include paths from STM library
CFLAGS += -I$(STM_COMMON)/Utilities/STM32F4-Discovery
CFLAGS += -I$(STM_COMMON)/Libraries/CMSIS/Include 
CFLAGS += -I$(STM_COMMON)/Libraries/CMSIS/Device/ST/STM32F4xx/Include
CFLAGS += -I$(STM_COMMON)/Libraries/STM32F4xx_StdPeriph_Driver/inc
CFLAGS += -I$(STM_COMMON)/Libraries/CMSIS/Device/ST/STM32F4xx/Include

# Include path to hw-conf files
CFLAGS += -I$(PROJECT_PWD)/hw-conf/

# Linker flags
LDFLAGS = -T$(PROJECT_PWD)/hw-conf/stm32_flash.ld -lc -lgcc -lrdimon

# Define used tools
CC=$(GCC_PREFIX)gcc
OBJCOPY=$(GCC_PREFIX)objcopy
AR=$(GCC_PREFIX)ar


ECHO := $(shell which echo) -e
COLOR_RESET := \x1B[0m
COLOR_RED := \x1B[91m
COLOR_GREEN := \e[92m
COLOR_YELLOW := \e[93m
COLOR_BLUE := \e[94m

RM := rm -f -R


# recusive search
recursive_wildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))
# using HELP_VAR := $(call recursive_wildcard,foo/,*.c)
